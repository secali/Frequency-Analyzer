/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
*/

import java.util.HashMap;
import java.util.Map;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;


/**
 *
 * @author Sergio
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    
    String text2generate;
    String encrypted;
    String textoParcialmenteDesencriptado;
    Text textReference;
    Text textEncrypted;
    Map<Character, Character> d;
    public GUI() {
        initComponents();
        text2generate = encrypted = textoParcialmenteDesencriptado ="";
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_reference = new javax.swing.JTextField();
        tf_encrypted = new javax.swing.JTextField();
        b_run = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_encrypted = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_reference = new javax.swing.JTextArea();
        b_generate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ta_partially = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        l_dictionary = new javax.swing.JLabel();
        tf_change = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tf_character = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        b_apply = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Frequency Analyzer");
        setMaximumSize(new java.awt.Dimension(816, 329));
        setMinimumSize(new java.awt.Dimension(816, 329));
        setResizable(false);

        jLabel1.setText("Name of reference file:");

        jLabel2.setText("Name of encrypted file:");

        b_run.setText("Run");
        b_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_runActionPerformed(evt);
            }
        });

        ta_encrypted.setColumns(20);
        ta_encrypted.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        ta_encrypted.setLineWrap(true);
        ta_encrypted.setRows(5);
        jScrollPane1.setViewportView(ta_encrypted);

        ta_reference.setColumns(20);
        ta_reference.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        ta_reference.setLineWrap(true);
        ta_reference.setRows(5);
        jScrollPane2.setViewportView(ta_reference);

        b_generate.setText("Generate File");
        b_generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_generateActionPerformed(evt);
            }
        });

        jLabel3.setText("Reference file:");

        jLabel4.setText("Encrypted file:");

        ta_partially.setColumns(20);
        ta_partially.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        ta_partially.setLineWrap(true);
        ta_partially.setRows(5);
        jScrollPane3.setViewportView(ta_partially);

        jLabel5.setText("Partially decrypted:");

        l_dictionary.setText("");

        tf_change.setText("");
        tf_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_changeActionPerformed(evt);
            }
        });

        jLabel6.setText(">>");

        tf_character.setText("");

        jLabel7.setText("Change: ");

        b_apply.setText("Apply");
        b_apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_applyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_reference)
                    .addComponent(tf_encrypted))
                .addGap(18, 18, 18)
                .addComponent(b_run)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addComponent(jLabel4))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_dictionary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_change, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_character, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b_apply)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_generate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_run, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tf_reference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tf_encrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(l_dictionary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_generate)
                    .addComponent(tf_change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(tf_character, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(b_apply))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void b_runActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        
    textReference = new Text ();
	textEncrypted = new Text ();
		
	System.out.println("Reading reference and encrypted file...\n");
	textReference.readTextFromFile(tf_reference.getText());
	textEncrypted.readTextFromFile(tf_encrypted.getText());
        
        System.out.println("################################################################################");
	System.out.println("########################## REFERENCE TEXT ######################################");
	System.out.println("################################################################################");
	System.out.println(textReference.getText());
        ta_reference.setText(textReference.getText());
        
        System.out.println("################################################################################");
	System.out.println("########################## ENCRYPTED TEXT ######################################");
	System.out.println("################################################################################");
	System.out.println(textEncrypted.getText());
        ta_encrypted.setText(textEncrypted.getText());
        
        System.out.println("################################################################################");
	System.out.println("############ OCURRENCES ON REFERENCE TEXT ######################################");
	System.out.println("################################################################################");
	textReference.printOccurrences();
		
	System.out.println("################################################################################");
	System.out.println("############ OCURRENCES ON ENCRYPTED TEXT ######################################");
	System.out.println("################################################################################");
	textEncrypted.printOccurrences();
        
        System.out.println("################################################################################");
		System.out.println("############ DICTIONARY ########################################################");
		System.out.println("################################################################################");
		d = new HashMap<Character, Character> ();
		Map<Character, Character> repetidas = new HashMap<Character, Character> ();
		d = textEncrypted.generateDictionary(textReference.getOccurrences(),repetidas);
		System.out.println(d+"\n\n");
        System.out.println(repetidas);
                l_dictionary.setText("["+d.toString()+"]");
                
                
                
                
        System.out.println("################################################################################");
		System.out.println("############ TEXT PARTIALLY DECRYPTED ##########################################");
		System.out.println("################################################################################");
		encrypted = textEncrypted.getText();
		for(int i=0; i<encrypted.length(); i++) {
			if(d.containsKey(encrypted.charAt(i))) {
				//System.out.println("Cambiando del texo: "+encrypted.charAt(i)+ " por "+ d.get(encrypted.charAt(i)));
				textoParcialmenteDesencriptado+=d.get(encrypted.charAt(i));
				
			}else textoParcialmenteDesencriptado+=encrypted.charAt(i);
		}
		
		System.out.println(textoParcialmenteDesencriptado);
                ta_partially.setText(textoParcialmenteDesencriptado);
                text2generate = textoParcialmenteDesencriptado;
        
        
    }                                     

    private void b_generateActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
         try {
 			PrintWriter writer = new PrintWriter("generatedFile.txt");
 			writer.println(text2generate);
 			
 			writer.close();
 		} catch (FileNotFoundException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		}
           try {
			java.awt.Desktop.getDesktop().edit(new File("generatedFile.txt"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }                                          

    private void b_applyActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    	
    	StringBuilder s = new StringBuilder(textEncrypted.getText());
    	
    	
    	
    	char cambiar = tf_change.getText().toString().charAt(0);
    	
    	char porEsta = tf_character.getText().toString().charAt(0);
    	
    	
    	d.replace(cambiar, porEsta);
    	 l_dictionary.setText("["+d.toString()+"]");
    	System.out.println(d);
    	
    	
    	System.out.println(cambiar+"/"+porEsta);
    	
    	String nuevo = "";
    	
    	for(int i=0; i<encrypted.length(); i++) {
			if(d.containsKey(encrypted.charAt(i))) {
				System.out.println("---");
				System.out.println("Cambiando del texo: "+encrypted.charAt(i)+ " por "+ d.get(encrypted.charAt(i)));
				nuevo+=d.get(encrypted.charAt(i));
				
			}else nuevo+=encrypted.charAt(i);
		}
		
		System.out.println("-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--"+textoParcialmenteDesencriptado);
                ta_partially.setText(nuevo);
                textoParcialmenteDesencriptado = nuevo;
                text2generate = nuevo;
    	
    	
    }                                       

    private void tf_changeActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton b_apply;
    private javax.swing.JButton b_generate;
    private javax.swing.JButton b_run;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel l_dictionary;
    private javax.swing.JTextArea ta_encrypted;
    private javax.swing.JTextArea ta_partially;
    private javax.swing.JTextArea ta_reference;
    private javax.swing.JTextField tf_change;
    private javax.swing.JTextField tf_character;
    private javax.swing.JTextField tf_encrypted;
    private javax.swing.JTextField tf_reference;
    // End of variables declaration                   
}


